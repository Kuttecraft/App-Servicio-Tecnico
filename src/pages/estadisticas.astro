---
/**
 * P√°gina de estad√≠sticas (solo para administradores).
 * - Verifica rol admin desde Astro.locals y redirige si no corresponde.
 * - Muestra selector de mes (YYYY-MM) y agrupaci√≥n (modelo | estado | t√©cnico).
 * - Renderiza un gr√°fico de torta (Chart.js) + tabla con TOP 10 + paneles de IDs por grupo.
 * - Se alimenta desde /api/estadisticas (ya implementado).
 */
import BasePrivateLayout from '../layouts/BasePrivateLayout.astro';

// ‚úÖ Solo admin: si no lo es, redirige a /no-autorizado
const perfil = (Astro.locals as any).perfil;
const isAdmin = (perfil?.rol === 'admin') || (perfil?.admin === true);
if (!isAdmin) {
  return Astro.redirect('/no-autorizado');
}

// Mes por defecto para el input[type=month]: YYYY-MM
const now = new Date();
const yyyy = now.getFullYear();
const mm = String(now.getMonth() + 1).padStart(2, '0');
const defaultMonth = `${yyyy}-${mm}`;
---

<BasePrivateLayout>
  <div class="container mt-4" style="max-width: 980px;">
    <!-- Header con controles -->
    <div class="d-flex align-items-center justify-content-between flex-wrap gap-3 mb-3">
      <h1 class="h4 m-0">Estad√≠sticas</h1>

      <div class="d-flex align-items-center gap-2 flex-wrap">
        <label for="mes" class="form-label m-0">Mes</label>
        <input id="mes" type="month" class="form-control" style="min-width: 180px;" value={defaultMonth} />

        <label for="group" class="form-label m-0">Agrupar por</label>
        <select id="group" class="form-select" style="min-width: 180px;">
          <option value="modelo" selected>Modelo</option>
          <option value="estado">Estado</option>
          <option value="tecnico">T√©cnico</option>
        </select>

        <button id="btn-actualizar" class="btn btn-primary">Actualizar</button>
      </div>
    </div>

    <!-- Card principal -->
    <div class="card shadow-sm">
      <div class="card-body">
        <h2 class="h6 text-muted mb-3">
          Distribuci√≥n por <span id="chartTitle">modelo</span> (%)
        </h2>

        <!-- Lienzo del gr√°fico -->
        <div class="ratio ratio-1x1" style="max-width: 560px; margin: 0 auto;">
          <canvas id="chartModelos"></canvas>
        </div>

        <!-- Panel info: resumen + tabla -->
        <div id="panel-info" class="mt-4">
          <div id="resumen" class="small text-muted"></div>
          <div id="tabla" class="table-responsive mt-2" style="display:none;">
            <table class="table table-sm">
              <thead>
                <tr>
                  <th id="thLabel">Modelo</th>
                  <th class="text-end">Cantidad</th>
                  <th class="text-end">Porcentaje</th>
                </tr>
              </thead>
              <tbody id="tbody"></tbody>
            </table>
          </div>
        </div>

        <!-- Sin datos -->
        <div id="sin-datos" class="alert alert-warning mt-3 d-none">
          No hay datos para el mes seleccionado.
        </div>

        <!-- IDs por estado (solo visible cuando group === 'estado') -->
        <div id="ids-estado-wrap" class="mt-4 d-none">
          <h3 class="h6 mb-2">ID de las m√°quinas seg√∫n estado</h3>
          <div id="ids-estado-list" class="small"></div>
        </div>

        <!-- IDs por modelo (solo visible cuando group === 'modelo') -->
        <div id="ids-modelo-wrap" class="mt-4 d-none">
          <h3 class="h6 mb-2">ID de las m√°quinas seg√∫n modelo</h3>
          <div id="ids-modelo-list" class="small"></div>
        </div>

        <!-- IDs por t√©cnico (solo visible cuando group === 'tecnico') -->
        <div id="ids-tecnico-wrap" class="mt-4 d-none">
          <h3 class="h6 mb-2">ID de las m√°quinas seg√∫n t√©cnico</h3>
          <div id="ids-tecnico-list" class="small"></div>
        </div>
      </div>
    </div>
  </div>

  <!-- Estilos locales: chips de ID y ‚Äúdots‚Äù de color -->
  <style is:inline>
    /* chips/links de IDs clickeables */
    #ids-estado-list .id-link,
    #ids-modelo-list .id-link,
    #ids-tecnico-list .id-link {
      text-decoration: none;
      border: 1px solid rgba(0,0,0,.08);
      padding: 0 .35rem;
      border-radius: .35rem;
      margin-right: .25rem;
      display: inline-block;
    }
    #ids-estado-list .id-link:hover,
    #ids-modelo-list .id-link:hover,
    #ids-tecnico-list .id-link:hover {
      background: rgba(13,110,253,.08);
    }

    /* puntito de color al lado del estado/modelo/tec (cuando corresponda) */
    .dot {
      display: inline-block;
      width: .75rem;
      height: .75rem;
      border-radius: 50%;
      margin-right: .35rem;
      vertical-align: middle;
      border: 1px solid rgba(0,0,0,.08);
    }
  </style>

  <!-- Chart.js UMD -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.3/dist/chart.umd.min.js" defer></script>

  <!-- L√≥gica de la vista -->
  <script is:inline>
    (function () {
      // üé® Colores oficiales por estado (coinciden con lo usado en otras vistas)
      var ESTADO_COLORS = {
        "Nuevo": "#E2FFF6",
        "Retirar": "#FFE9CC",
        "Presupuestar": "#FFD9D9",
        "Enviar presupuesto": "#E9FCEC",
        "P. Enviado": "#D9EBFF",
        "Reparaci√≥n": "#FFFDE1",
        "Prueba": "#E3DBFF",
        "Lista": "#FFE3DC",
        "Entregada": "#E6F6FF",
        "Feedback Enviado": "#FAE4F6",
        "Archivada": "#EDEDED",
        "No realizada": "#FFF1D9"
      };

      // Paleta fallback para modelo/t√©cnico (rotativa)
      var FALLBACK = ["#cfe8ff","#ffe0cc","#e4ffd6","#f8d5ff","#ffefbf","#d7f3ff","#ffd7e0","#e0f7f1","#e6e6e6","#dcd0ff","#ffdcdc","#d0ffd0"];

      // Helper: devuelve color por etiqueta seg√∫n el grupo
      function colorsFor(labels, group) {
        if (group === 'estado') {
          return labels.map(function (l) { return ESTADO_COLORS[l] || '#e9ecef'; });
        }
        // Para modelo/tecnico: ciclo por paleta fallback
        return labels.map(function (_, i) { return FALLBACK[i % FALLBACK.length]; });
      }

      // Referencias UI
      var chart;
      var $mes = document.getElementById('mes');
      var $group = document.getElementById('group');
      var $btn = document.getElementById('btn-actualizar');
      var $resumen = document.getElementById('resumen');
      var $tbody = document.getElementById('tbody');
      var $tabla = document.getElementById('tabla');
      var $sinDatos = document.getElementById('sin-datos');
      var $chartTitle = document.getElementById('chartTitle');
      var $thLabel = document.getElementById('thLabel');

      // contenedores de IDs
      var $idsEstadoWrap = document.getElementById('ids-estado-wrap');
      var $idsEstadoList = document.getElementById('ids-estado-list');
      var $idsModeloWrap = document.getElementById('ids-modelo-wrap');
      var $idsModeloList = document.getElementById('ids-modelo-list');
      var $idsTecnicoWrap = document.getElementById('ids-tecnico-wrap');
      var $idsTecnicoList = document.getElementById('ids-tecnico-list');

      // Llama a la API de estad√≠sticas con filtros
      function fetchDatos(year, month, group) {
        var url = '/api/estadisticas?year=' + year + '&month=' + month + '&group=' + encodeURIComponent(group);
        return fetch(url).then(function (res) {
          if (!res.ok) throw new Error('Error consultando estad√≠sticas');
          return res.json();
        });
      }

      // Render de la tabla (TOP 10)
      function renderTabla(items, total, campoLabel, group) {
        $tbody.innerHTML = '';
        $thLabel.textContent = campoLabel;

        // Paleta para dots si el group es 'estado'
        var labels = items.map(function(i){ return i.label; });
        var bg = colorsFor(labels, group);

        items.forEach(function (row, idx) {
          var tr = document.createElement('tr');

          var tdLabel = document.createElement('td');
          if (group === 'estado') {
            var dot = document.createElement('span');
            dot.className = 'dot';
            dot.style.background = bg[idx];
            tdLabel.appendChild(dot);
          }
          tdLabel.appendChild(document.createTextNode(row.label));

          var tdCount = document.createElement('td');
          tdCount.className = 'text-end';
          tdCount.textContent = String(row.count);

          var tdPct = document.createElement('td');
          tdPct.className = 'text-end';
          var pct = (row.porcentaje || 0).toFixed(1) + '%';
          tdPct.textContent = pct;

          tr.appendChild(tdLabel);
          tr.appendChild(tdCount);
          tr.appendChild(tdPct);
          $tbody.appendChild(tr);
        });

        $resumen.textContent = 'Total de ingresos del mes: ' + total;
        $tabla.style.display = items.length ? '' : 'none';
      }

      // Render del gr√°fico de torta
      function renderChart(labels, data, group) {
        var ctx = document.getElementById('chartModelos');
        if (chart) chart.destroy();
        var bg = colorsFor(labels, group);

        chart = new window.Chart(ctx, {
          type: 'pie',
          data: {
            labels: labels,
            datasets: [{
              data: data,
              backgroundColor: bg,
              borderColor: '#ffffff',
              borderWidth: 1
            }]
          },
          options: {
            responsive: true,
            plugins: {
              legend: { position: 'bottom' },
              tooltip: {
                callbacks: {
                  // Tooltip con cantidad + porcentaje calculado al vuelo
                  label: function (context) {
                    var label = context.label || '';
                    var value = context.parsed || 0;
                    var sum = context.dataset.data.reduce(function (a, b) { return a + b; }, 0);
                    var pct = sum ? (value / sum) * 100 : 0;
                    return label + ': ' + value + ' (' + pct.toFixed(1) + '%)';
                  }
                }
              }
            }
          }
        });
      }

      // Renderiza panel "IDs por estado"
      function renderIdsByEstado(idsByEstado) {
        if (!idsByEstado || Object.keys(idsByEstado).length === 0) {
          $idsEstadoWrap.classList.add('d-none');
          $idsEstadoList.innerHTML = '';
          return;
        }
        var estados = Object.keys(idsByEstado).sort(function (a, b) {
          return a.localeCompare(b, 'es', { sensitivity: 'base' });
        });
        $idsEstadoList.innerHTML = '';
        estados.forEach(function (est) {
          var ids = idsByEstado[est] || [];
          var line = document.createElement('div');
          line.className = 'mb-1';

          // dot color al lado del estado (usa paleta por estado)
          var dot = document.createElement('span');
          dot.className = 'dot';
          dot.style.background = (ESTADO_COLORS[est] || '#e9ecef');
          line.appendChild(dot);

          var strong = document.createElement('strong');
          strong.textContent = est + ': ';
          line.appendChild(strong);

          if (ids.length === 0) {
            line.appendChild(document.createTextNode('‚Äî'));
          } else {
            ids.forEach(function (id, idx) {
              var a = document.createElement('a');
              a.href = '/detalle/' + id;
              a.className = 'id-link';
              a.title = 'Ver ticket ' + id;
              a.textContent = String(id);
              line.appendChild(a);
              if (idx < ids.length - 1) line.appendChild(document.createTextNode(', '));
            });
          }
          $idsEstadoList.appendChild(line);
        });
        $idsEstadoWrap.classList.remove('d-none');
      }

      // Renderiza panel "IDs por modelo"
      function renderIdsByModelo(idsByModelo) {
        if (!idsByModelo || Object.keys(idsByModelo).length === 0) {
          $idsModeloWrap.classList.add('d-none');
          $idsModeloList.innerHTML = '';
          return;
        }
        var modelos = Object.keys(idsByModelo).sort(function (a, b) {
          return a.localeCompare(b, 'es', { sensitivity: 'base' });
        });
        $idsModeloList.innerHTML = '';
        modelos.forEach(function (modelo) {
          var ids = idsByModelo[modelo] || [];
          var line = document.createElement('div');
          line.className = 'mb-1';
          var strong = document.createElement('strong');
          strong.textContent = modelo + ': ';
          line.appendChild(strong);
          if (ids.length === 0) {
            line.appendChild(document.createTextNode('‚Äî'));
          } else {
            ids.forEach(function (id, idx) {
              var a = document.createElement('a');
              a.href = '/detalle/' + id;
              a.className = 'id-link';
              a.title = 'Ver ticket ' + id;
              a.textContent = String(id);
              line.appendChild(a);
              if (idx < ids.length - 1) line.appendChild(document.createTextNode(', '));
            });
          }
          $idsModeloList.appendChild(line);
        });
        $idsModeloWrap.classList.remove('d-none');
      }

      // Renderiza panel "IDs por t√©cnico"
      function renderIdsByTecnico(idsByTecnico) {
        if (!idsByTecnico || Object.keys(idsByTecnico).length === 0) {
          $idsTecnicoWrap.classList.add('d-none');
          $idsTecnicoList.innerHTML = '';
          return;
        }
        var tecnicos = Object.keys(idsByTecnico).sort(function (a, b) {
          return a.localeCompare(b, 'es', { sensitivity: 'base' });
        });
        $idsTecnicoList.innerHTML = '';
        tecnicos.forEach(function (tec) {
          var ids = idsByTecnico[tec] || [];
          var line = document.createElement('div');
          line.className = 'mb-1';
          var strong = document.createElement('strong');
          strong.textContent = tec + ': ';
          line.appendChild(strong);
          if (ids.length === 0) {
            line.appendChild(document.createTextNode('‚Äî'));
          } else {
            ids.forEach(function (id, idx) {
              var a = document.createElement('a');
              a.href = '/detalle/' + id;
              a.className = 'id-link';
              a.title = 'Ver ticket ' + id;
              a.textContent = String(id);
              line.appendChild(a);
              if (idx < ids.length - 1) line.appendChild(document.createTextNode(', '));
            });
          }
          $idsTecnicoList.appendChild(line);
        });
        $idsTecnicoWrap.classList.remove('d-none');
      }

      // Carga datos desde la API y renderiza todo
      async function cargar() {
        try {
          var val = $mes.value; // yyyy-mm
          var parts = val.split('-');
          var year = parseInt(parts[0], 10);
          var month = parseInt(parts[1], 10);
          var group = $group.value; // 'modelo' | 'estado' | 'tecnico'

          // T√≠tulos din√°micos
          var campoLabel = group === 'estado' ? 'Estado' : (group === 'tecnico' ? 'T√©cnico' : 'Modelo');
          $chartTitle.textContent = group;
          $thLabel.textContent = campoLabel;

          // Fetch
          var resp = await fetchDatos(year, month, group);
          var total = resp.total || 0;
          var items = resp.items || [];

          // Mapas de IDs (opcionales)
          var idsByEstado = resp.idsByEstado || null;
          var idsByModelo = resp.idsByModelo || null;
          var idsByTecnico = resp.idsByTecnico || null;

          // Sin datos ‚Üí resetea UI
          if (!total) {
            $sinDatos.classList.remove('d-none');
            renderTabla([], 0, campoLabel, group);
            if (chart) chart.destroy();
            renderIdsByEstado(null);
            renderIdsByModelo(null);
            renderIdsByTecnico(null);
            return;
          } else {
            $sinDatos.classList.add('d-none');
          }

          // Ordenar y preparar datasets
          items.sort(function (a, b) { return b.count - a.count; });
          var labels = items.map(function (i) { return i.label; });
          var data = items.map(function (i) { return i.count; });

          // Pintar tabla + gr√°fico
          renderTabla(items, total, campoLabel, group);
          renderChart(labels, data, group);

          // Paneles de IDs seg√∫n el grupo activo
          if (group === 'estado') {
            renderIdsByEstado(idsByEstado);
            renderIdsByModelo(null);
            renderIdsByTecnico(null);
          } else if (group === 'modelo') {
            renderIdsByModelo(idsByModelo);
            renderIdsByEstado(null);
            renderIdsByTecnico(null);
          } else {
            renderIdsByTecnico(idsByTecnico);
            renderIdsByEstado(null);
            renderIdsByModelo(null);
          }
        } catch (e) {
          console.error(e);
          $sinDatos.classList.remove('d-none');
          renderIdsByEstado(null);
          renderIdsByModelo(null);
          renderIdsByTecnico(null);
        }
      }

      // Listeners
      document.getElementById('btn-actualizar').addEventListener('click', cargar);
      document.getElementById('mes').addEventListener('change', cargar);
      document.getElementById('group').addEventListener('change', cargar);
      window.addEventListener('DOMContentLoaded', cargar);
    })();
  </script>
</BasePrivateLayout>
