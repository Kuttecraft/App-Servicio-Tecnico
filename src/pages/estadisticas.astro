---
import BasePrivateLayout from '../layouts/BasePrivateLayout.astro';

// ‚úÖ Solo admin
const perfil = (Astro.locals as any).perfil;
const isAdmin = (perfil?.rol === 'admin') || (perfil?.admin === true);
if (!isAdmin) {
  return Astro.redirect('/no-autorizado');
}

// Mes por defecto: YYYY-MM
const now = new Date();
const yyyy = now.getFullYear();
const mm = String(now.getMonth() + 1).padStart(2, '0');
const defaultMonth = `${yyyy}-${mm}`;
---

<BasePrivateLayout>
  <div class="container mt-4" style="max-width: 980px;">
    <div class="d-flex align-items-center justify-content-between flex-wrap gap-3 mb-3">
      <h1 class="h4 m-0">Estad√≠sticas</h1>

      <div class="d-flex align-items-center gap-2 flex-wrap">
        <label for="mes" class="form-label m-0">Mes</label>
        <input id="mes" type="month" class="form-control" style="min-width: 180px;" value={defaultMonth} />

        <label for="group" class="form-label m-0">Agrupar por</label>
        <select id="group" class="form-select" style="min-width: 180px;">
          <option value="modelo" selected>Modelo</option>
          <option value="estado">Estado</option>
          <option value="tecnico">T√©cnico</option>
        </select>

        <button id="btn-actualizar" class="btn btn-primary">Actualizar</button>
      </div>
    </div>

    <div class="card shadow-sm">
      <div class="card-body">
        <h2 class="h6 text-muted mb-3">
          Distribuci√≥n por <span id="chartTitle">modelo</span> (%)
        </h2>

        <div class="ratio ratio-1x1" style="max-width: 560px; margin: 0 auto;">
          <canvas id="chartModelos"></canvas>
        </div>

        <div id="panel-info" class="mt-4">
          <div id="resumen" class="small text-muted"></div>
          <div id="tabla" class="table-responsive mt-2" style="display:none;">
            <table class="table table-sm">
              <thead>
                <tr>
                  <th id="thLabel">Modelo</th>
                  <th class="text-end">Cantidad</th>
                  <th class="text-end">Porcentaje</th>
                </tr>
              </thead>
              <tbody id="tbody"></tbody>
            </table>
          </div>
        </div>

        <div id="sin-datos" class="alert alert-warning mt-3 d-none">
          No hay datos para el mes seleccionado.
        </div>

        <!-- IDs por estado (visible solo cuando group === 'estado') -->
        <div id="ids-estado-wrap" class="mt-4 d-none">
          <h3 class="h6 mb-2">ID de las m√°quinas seg√∫n estado</h3>
          <div id="ids-estado-list" class="small"></div>
        </div>

        <!-- IDs por modelo (visible solo cuando group === 'modelo') -->
        <div id="ids-modelo-wrap" class="mt-4 d-none">
          <h3 class="h6 mb-2">ID de las m√°quinas seg√∫n modelo</h3>
          <div id="ids-modelo-list" class="small"></div>
        </div>

        <!-- üëâ NUEVO: IDs por t√©cnico (visible solo cuando group === 'tecnico') -->
        <div id="ids-tecnico-wrap" class="mt-4 d-none">
          <h3 class="h6 mb-2">ID de las m√°quinas seg√∫n t√©cnico</h3>
          <div id="ids-tecnico-list" class="small"></div>
        </div>
      </div>
    </div>
  </div>

  <!-- Estilos para los links de IDs -->
  <style is:inline>
    #ids-estado-list .id-link,
    #ids-modelo-list .id-link,
    #ids-tecnico-list .id-link {
      text-decoration: none;
      border: 1px solid rgba(0,0,0,.08);
      padding: 0 .35rem;
      border-radius: .35rem;
      margin-right: .25rem;
      display: inline-block;
    }
    #ids-estado-list .id-link:hover,
    #ids-modelo-list .id-link:hover,
    #ids-tecnico-list .id-link:hover {
      background: rgba(13,110,253,.08);
    }
  </style>

  <!-- Chart.js -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.3/dist/chart.umd.min.js" defer></script>

  <script is:inline>
    (function () {
      var chart;
      var $mes = document.getElementById('mes');
      var $group = document.getElementById('group');
      var $btn = document.getElementById('btn-actualizar');
      var $resumen = document.getElementById('resumen');
      var $tbody = document.getElementById('tbody');
      var $tabla = document.getElementById('tabla');
      var $sinDatos = document.getElementById('sin-datos');
      var $chartTitle = document.getElementById('chartTitle');
      var $thLabel = document.getElementById('thLabel');

      // Contenedores de IDs por estado, modelo y t√©cnico
      var $idsEstadoWrap = document.getElementById('ids-estado-wrap');
      var $idsEstadoList = document.getElementById('ids-estado-list');
      var $idsModeloWrap = document.getElementById('ids-modelo-wrap');
      var $idsModeloList = document.getElementById('ids-modelo-list');
      var $idsTecnicoWrap = document.getElementById('ids-tecnico-wrap');
      var $idsTecnicoList = document.getElementById('ids-tecnico-list');

      function fetchDatos(year, month, group) {
        var url = '/api/estadisticas?year=' + year + '&month=' + month + '&group=' + encodeURIComponent(group);
        return fetch(url).then(function (res) {
          if (!res.ok) throw new Error('Error consultando estad√≠sticas');
          return res.json();
        });
      }

      function renderTabla(items, total, campoLabel) {
        $tbody.innerHTML = '';
        $thLabel.textContent = campoLabel;

        items.forEach(function (row) {
          var tr = document.createElement('tr');

          var tdLabel = document.createElement('td');
          tdLabel.textContent = row.label;

          var tdCount = document.createElement('td');
          tdCount.className = 'text-end';
          tdCount.textContent = String(row.count);

          var tdPct = document.createElement('td');
          tdPct.className = 'text-end';
          var pct = (row.porcentaje || 0).toFixed(1) + '%';
          tdPct.textContent = pct;

          tr.appendChild(tdLabel);
          tr.appendChild(tdCount);
          tr.appendChild(tdPct);
          $tbody.appendChild(tr);
        });

        $resumen.textContent = 'Total de ingresos del mes: ' + total;
        $tabla.style.display = items.length ? '' : 'none';
      }

      function renderChart(labels, data) {
        var ctx = document.getElementById('chartModelos');
        if (chart) chart.destroy();
        chart = new window.Chart(ctx, {
          type: 'pie',
          data: {
            labels: labels,
            datasets: [{ data: data, borderWidth: 1 }]
          },
          options: {
            responsive: true,
            plugins: {
              legend: { position: 'bottom' },
              tooltip: {
                callbacks: {
                  label: function (context) {
                    var label = context.label || '';
                    var value = context.parsed || 0;
                    var sum = context.dataset.data.reduce(function (a, b) { return a + b; }, 0);
                    var pct = sum ? (value / sum) * 100 : 0;
                    return label + ': ' + value + ' (' + pct.toFixed(1) + '%)';
                  }
                }
              }
            }
          }
        });
      }

      function renderIdsByEstado(idsByEstado) {
        if (!idsByEstado || Object.keys(idsByEstado).length === 0) {
          $idsEstadoWrap.classList.add('d-none');
          $idsEstadoList.innerHTML = '';
          return;
        }
        var estados = Object.keys(idsByEstado).sort(function (a, b) {
          return a.localeCompare(b, 'es', { sensitivity: 'base' });
        });
        $idsEstadoList.innerHTML = '';
        estados.forEach(function (est) {
          var ids = idsByEstado[est] || [];
          var line = document.createElement('div');
          line.className = 'mb-1';
          var strong = document.createElement('strong');
          strong.textContent = est + ': ';
          line.appendChild(strong);
          if (ids.length === 0) {
            line.appendChild(document.createTextNode('‚Äî'));
          } else {
            ids.forEach(function (id, idx) {
              var a = document.createElement('a');
              a.href = '/detalle/' + id;
              a.className = 'id-link';
              a.title = 'Ver ticket ' + id;
              a.textContent = String(id);
              line.appendChild(a);
              if (idx < ids.length - 1) line.appendChild(document.createTextNode(', '));
            });
          }
          $idsEstadoList.appendChild(line);
        });
        $idsEstadoWrap.classList.remove('d-none');
      }

      function renderIdsByModelo(idsByModelo) {
        if (!idsByModelo || Object.keys(idsByModelo).length === 0) {
          $idsModeloWrap.classList.add('d-none');
          $idsModeloList.innerHTML = '';
          return;
        }
        var modelos = Object.keys(idsByModelo).sort(function (a, b) {
          return a.localeCompare(b, 'es', { sensitivity: 'base' });
        });
        $idsModeloList.innerHTML = '';
        modelos.forEach(function (modelo) {
          var ids = idsByModelo[modelo] || [];
          var line = document.createElement('div');
          line.className = 'mb-1';
          var strong = document.createElement('strong');
          strong.textContent = modelo + ': ';
          line.appendChild(strong);
          if (ids.length === 0) {
            line.appendChild(document.createTextNode('‚Äî'));
          } else {
            ids.forEach(function (id, idx) {
              var a = document.createElement('a');
              a.href = '/detalle/' + id;
              a.className = 'id-link';
              a.title = 'Ver ticket ' + id;
              a.textContent = String(id);
              line.appendChild(a);
              if (idx < ids.length - 1) line.appendChild(document.createTextNode(', '));
            });
          }
          $idsModeloList.appendChild(line);
        });
        $idsModeloWrap.classList.remove('d-none');
      }

      // üëâ NUEVO: render IDs agrupados por t√©cnico
      function renderIdsByTecnico(idsByTecnico) {
        if (!idsByTecnico || Object.keys(idsByTecnico).length === 0) {
          $idsTecnicoWrap.classList.add('d-none');
          $idsTecnicoList.innerHTML = '';
          return;
        }
        var tecnicos = Object.keys(idsByTecnico).sort(function (a, b) {
          return a.localeCompare(b, 'es', { sensitivity: 'base' });
        });
        $idsTecnicoList.innerHTML = '';
        tecnicos.forEach(function (tec) {
          var ids = idsByTecnico[tec] || [];
          var line = document.createElement('div');
          line.className = 'mb-1';
          var strong = document.createElement('strong');
          strong.textContent = tec + ': ';
          line.appendChild(strong);
          if (ids.length === 0) {
            line.appendChild(document.createTextNode('‚Äî'));
          } else {
            ids.forEach(function (id, idx) {
              var a = document.createElement('a');
              a.href = '/detalle/' + id;
              a.className = 'id-link';
              a.title = 'Ver ticket ' + id;
              a.textContent = String(id);
              line.appendChild(a);
              if (idx < ids.length - 1) line.appendChild(document.createTextNode(', '));
            });
          }
          $idsTecnicoList.appendChild(line);
        });
        $idsTecnicoWrap.classList.remove('d-none');
      }

      async function cargar() {
        try {
          var val = $mes.value; // yyyy-mm
          var parts = val.split('-');
          var year = parseInt(parts[0], 10);
          var month = parseInt(parts[1], 10);
          var group = $group.value; // 'modelo' | 'estado' | 'tecnico'

          var campoLabel = group === 'estado' ? 'Estado' : (group === 'tecnico' ? 'T√©cnico' : 'Modelo');
          $chartTitle.textContent = group;
          $thLabel.textContent = campoLabel;

          var resp = await fetchDatos(year, month, group);
          var total = resp.total || 0;
          var items = resp.items || [];

          var idsByEstado = resp.idsByEstado || null;
          var idsByModelo = resp.idsByModelo || null;
          var idsByTecnico = resp.idsByTecnico || null; // üëà NUEVO

          if (!total) {
            $sinDatos.classList.remove('d-none');
            renderTabla([], 0, campoLabel);
            if (chart) chart.destroy();
            renderIdsByEstado(null);
            renderIdsByModelo(null);
            renderIdsByTecnico(null);
            return;
          } else {
            $sinDatos.classList.add('d-none');
          }

          items.sort(function (a, b) { return b.count - a.count; });
          var labels = items.map(function (i) { return i.label; });
          var data = items.map(function (i) { return i.count; });

          renderTabla(items, total, campoLabel);
          renderChart(labels, data);

          if (group === 'estado') {
            renderIdsByEstado(idsByEstado);
            renderIdsByModelo(null);
            renderIdsByTecnico(null);
          } else if (group === 'modelo') {
            renderIdsByModelo(idsByModelo);
            renderIdsByEstado(null);
            renderIdsByTecnico(null);
          } else { // t√©cnico
            renderIdsByTecnico(idsByTecnico);
            renderIdsByEstado(null);
            renderIdsByModelo(null);
          }
        } catch (e) {
          console.error(e);
          $sinDatos.classList.remove('d-none');
          renderIdsByEstado(null);
          renderIdsByModelo(null);
          renderIdsByTecnico(null);
        }
      }

      $btn.addEventListener('click', cargar);
      $mes.addEventListener('change', cargar);
      $group.addEventListener('change', cargar);
      window.addEventListener('DOMContentLoaded', cargar);
    })();
  </script>
</BasePrivateLayout>
