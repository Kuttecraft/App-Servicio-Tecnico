---
import BasePrivateLayout from '../../layouts/BasePrivateLayout.astro';
import { supabase } from '../../lib/supabase';
import { formatearFecha, booleanATexto, formatearMoneda } from '../../lib/utils';

const { id } = Astro.params as { id: string }; 

const { data, error } = await supabase
  .from('TestImpresoras')
  .select('*')
  .eq('id', id)
  .single();

const equipo = data;
---

<BasePrivateLayout>
  <div class="container mt-4 position-relative">
    <h1 class="h3 mb-4">Detalle del equipo</h1>
     
    {equipo ? (
      <div class="card p-4 mx-auto shadow-sm position-relative" style="max-width: 600px;">
        <!-- Botón eliminar -->
        
        <button
          class="rounded-circle border-0 bg-transparent p-0 d-flex align-items-center justify-content-center"
          style="width: 30px; height: 30px;"
          onclick={`eliminarTicket('${equipo.id}')`}
          title="Eliminar ticket">
          <img src="/img/eliminar.png" alt="Eliminar" style="width: 32px; height: 32px;" />
        </button> 

        <!-- Imagen -->
        <div class="text-center mb-4">
          <img src={equipo.imagen} alt="Imagen impresora" class="img-fluid" style="max-height: 180px;" />
        </div>

        <!-- Cliente -->
        <h4 class="fw-bold text-primary mb-3">{equipo.cliente}</h4>

        <!-- Lista de detalles -->
        <ul class="list-unstyled small">
          <li><strong>Ticket:</strong> {equipo.ticket}</li>
          <li><strong>Estado:</strong> {equipo.estado}</li>
          <li><strong>Modelo:</strong> {equipo.modelo}</li>
          <li><strong>Fecha formulario:</strong> {equipo.fechaFormulario}</li>
          <li><strong>Nota Técnico:</strong> {equipo.notaTecnico}</li>
          <li><strong>Nota administración:</strong> {equipo.notaAdmin}</li>
          <li><strong>Comentarios:</strong> {equipo.comentarios}</li>
          <li><strong>Técnico:</strong> {equipo.tecnico}</li>
          <li><strong>¿Cubre garantía?:</strong> {booleanATexto(equipo.cubreGarantia)}</li>
          <li><strong>Nota interna:</strong> {equipo.notaInterna}</li>
          <li><strong>Link presupuesto:</strong> <a href={equipo.linkPresupuesto} target="_blank" class="text-decoration-underline">Ver</a></li>
          <li><strong>Monto:</strong> {formatearMoneda(equipo.monto)}</li>
          <li><strong>Modo delivery:</strong> {equipo.costoDelivery}</li>
          <li><strong>Info delivery:</strong> {equipo.infoDelivery}</li>
          <li><strong>DNI/CUIT:</strong> {equipo.dniCuit}</li>
          <li><strong>WhatsApp:</strong> {equipo.whatsapp}</li>
          <li><strong>Correo:</strong> {equipo.correo}</li>
          <li><strong>¿Cobrado?:</strong> {booleanATexto(equipo.cobrado)}</li>
          <li><strong>Fecha presupuesto:</strong> {equipo.timestampPresupuesto ? formatearFecha(equipo.timestampPresupuesto) : '—'}</li>
          <li><strong>Fecha listo:</strong> {equipo.timestampListo ? formatearFecha(equipo.timestampListo) : '—'}</li>
        </ul>
      </div>
    ) : (
      <p class="text-danger">No se encontró el equipo con ID: {id}</p>
    )}
  </div>

<script>
  declare global {
    interface Window {
      eliminarTicket: (id: string) => void;
    }
  }

  window.eliminarTicket = async function(id: string) {
    if (!confirm("¿Estás seguro de que querés eliminar este ticket? Esta acción no se puede deshacer.")) return;

    const res = await fetch(`/api/eliminarTicket?id=${id}`, {
      method: 'POST'
    });

    const data = await res.json();

    if (res.ok) {
      alert("Ticket eliminado correctamente.");
      window.location.href = '/dashboard'; // La ruta a donde te manda cuando se elimina un dato 
    } else {
      alert("Error al eliminar: " + data.error);
    }
  }
</script>

</BasePrivateLayout>
