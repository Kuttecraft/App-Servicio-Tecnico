---
import BasePrivateLayout from '../../layouts/BasePrivateLayout.astro';
import { supabase } from '../../lib/supabase';
import { formatearFecha, booleanATexto } from '../../lib/utils';

const { id } = Astro.params as { id: string };

// Perfil inyectado por el middleware
type Perfil = { rol?: string; admin?: boolean; activo?: boolean };
const perfil = (Astro.locals as any).perfil as Perfil | undefined;
const isAdmin = (perfil?.rol === 'admin') || (perfil?.admin === true);

// Ticket + joins
const { data, error } = await supabase
  .from('tickets_mian')
  .select(`
    *,
    cliente:cliente_id (
      dni_cuit,
      correo_electronico,
      whatsapp,
      cliente
    ),
    tecnico:tecnico_id (
      nombre,
      apellido
    ),
    delivery (
      pagado
    )
  `)
  .eq('id', id)
  .single();

const equipo = data;

// Imagen principal y miniaturas
const imagenPrincipal =
  equipo?.imagen_ticket ||
  equipo?.imagen ||
  equipo?.imagen_extra ||
  '/logo.webp';

const imagenes: string[] = Array.from(
  new Set(
    [equipo?.imagen_ticket, equipo?.imagen, equipo?.imagen_extra].filter(Boolean) as string[]
  )
);
---

<BasePrivateLayout>
  <style>
    .thumbs { display: flex; gap: .5rem; justify-content: center; }
    .thumb {
      height: 60px; width: 60px; border-radius: 8px; object-fit: cover; cursor: pointer;
      border: 2px solid transparent; transition: transform .15s ease, border-color .15s ease;
      outline: none;
    }
    .thumb:hover { transform: scale(1.04); }
    .thumb:focus-visible { outline: 2px solid #0d6efd; outline-offset: 2px; }
    .thumb.active { border-color: #0d6efd; }
  </style>

  <div class="container mt-4 position-relative">
    <div class="card mx-auto shadow" style="max-width: 650px;">
      <!-- Cabecera -->
      <div class="card-header bg-white d-flex align-items-center justify-content-between">
        <h3 class="h5 mb-0 fw-bold text-primary">Detalle del equipo</h3>

        {isAdmin && (
          <button
            class="btn btn-sm btn-outline-danger d-flex align-items-center"
            onclick={`eliminarTicket('${equipo.id}')`}
            title="Eliminar ticket">
            <i class="bi bi-trash"></i>
          </button>
        )}
      </div>

      <div class="card-body">
        <!-- Imagen principal -->
        <div class="text-center mb-3">
          <img
            id="imagen-equipo"
            src={`${imagenPrincipal}?t=${Date.now()}`}
            alt="Imagen impresora"
            class="rounded img-fluid shadow-sm"
            style="max-height: 300px; max-width: 300px; object-fit: cover; border-radius: 15px; cursor: zoom-in;"
          />
        </div>

        <!-- Miniaturas -->
        {imagenes.length > 0 && (
          <div class="thumbs mb-4" id="thumbs">
            {imagenes.map((src) => (
              <img
                src={`${src}?t=${Date.now()}`}
                data-src={src}
                alt="Miniatura"
                class={`thumb ${src === imagenPrincipal ? 'active' : ''}`}
                role="button"
                tabindex="0"
              />
            ))}
          </div>
        )}

        <!-- Datos -->
        <div class="text-center mb-4">
          <h4 class="fw-bold text-dark mb-1">{equipo.cliente?.cliente ?? '—'}</h4>
          <div class="text-muted small">{equipo.maquina_reparada ?? 'Modelo no especificado'}</div>
          <div class="row row-cols-1 row-cols-md-2 g-4 justify-content-center mt-3">
            <div class="col"><strong>Ticket:</strong> {equipo.ticket ?? '—'}</div>
            <div class="col"><strong>Estado:</strong> {equipo.estado ?? '—'}</div>
            <div class="col"><strong>¿Cobrado?:</strong> {booleanATexto(equipo.delivery?.pagado === 'true')}</div>
            <div class="col"><strong>Técnico:</strong> {equipo.tecnico ? `${equipo.tecnico.nombre} ${equipo.tecnico.apellido}` : '—'}</div>
            <div class="col"><strong>DNI/CUIT:</strong> {equipo.cliente?.dni_cuit ?? '—'}</div>
            <div class="col"><strong>Correo:</strong> {equipo.cliente?.correo_electronico ?? '—'}</div>
            <div class="col"><strong>WhatsApp:</strong> {equipo.cliente?.whatsapp ?? '—'}</div>
            <div class="col"><strong>Fecha formulario:</strong> {equipo.marca_temporal ? formatearFecha(equipo.marca_temporal) : '—'}</div>
            <div class="col"><strong>Fecha listo:</strong> {equipo.fecha_de_reparacion ? formatearFecha(equipo.fecha_de_reparacion) : '—'}</div>
          </div>
        </div>

        <!-- Botones SOLO admin -->
        {isAdmin && (
          <div class="row mt-4">
            <div class="col-6 d-flex justify-content-start">
              <a href={`/presupuesto/${equipo.id}`} class="btn btn-outline-primary btn-sm w-100">
                <i class="bi bi-receipt"></i> Añadir presupuesto
              </a>
            </div>
            <div class="col-6 d-flex justify-content-end">
              <a href={`/delivery/${equipo.id}`} class="btn btn-outline-success btn-sm w-100">
                <i class="bi bi-truck"></i> Añadir delivery
              </a>
            </div>
          </div>
        )}

        {!equipo && (
          <div class="alert alert-danger mt-4">No se encontró el equipo con ID: {id}</div>
        )}
      </div>
    </div>
  </div>

  <!-- Solo inyectamos la función si es admin -->
  {isAdmin && (
    <script>
      (window as any).eliminarTicket = async function(id) {
        if (!confirm("¿Estás seguro de que querés eliminar este ticket? Esta acción no se puede deshacer.")) return;
        const res = await fetch(`/api/eliminarTicket?id=${id}`, { method: 'POST' });
        const data = await res.json();
        if (res.ok) {
          alert("Ticket eliminado correctamente.");
          window.location.href = '/dashboard';
        } else {
          alert("Error al eliminar: " + data.error);
        }
      }
    </script>
  )}

  <script src="/scripts/form-ampliar-imagen.js" defer></script>
  <script src="/scripts/form-galeria.js?v=1" defer></script>
</BasePrivateLayout>
