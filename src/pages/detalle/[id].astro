---
import BasePrivateLayout from '../../layouts/BasePrivateLayout.astro';
import { supabase } from '../../lib/supabase';
import { formatearFecha, booleanATexto, formatearMoneda } from '../../lib/utils';

const { id } = Astro.params as { id: string };

// Obtener el ticket con joins a cliente, técnico y delivery
const { data, error } = await supabase
  .from('tickets_mian')
  .select(`
    *,
    cliente:cliente_id (
      dni_cuit,
      correo_electronico,
      whatsapp,
      cliente
    ),
    tecnico:tecnico_id (
      nombre,
      apellido
    ),
    delivery (
      pagado
    )
  `)
  .eq('id', id)
  .single();

const equipo = data;
---

<BasePrivateLayout>
  <div class="container mt-4 position-relative">
    <div class="card mx-auto shadow" style="max-width: 650px;">
      <!-- Cabecera de la card -->
      <div class="card-header bg-white d-flex align-items-center justify-content-between">
        <h3 class="h5 mb-0 fw-bold text-primary">
          Detalle del equipo
        </h3>
        <!-- Botón eliminar -->
        <button
          class="btn btn-sm btn-outline-danger d-flex align-items-center"
          onclick={`eliminarTicket('${equipo.id}')`}
          title="Eliminar ticket">
          <i class="bi bi-trash"></i>
        </button>
      </div>
      <div class="card-body">
        <!-- Imagen -->
        <div class="text-center mb-4">
          <img
            id="imagen-equipo"
            src={equipo.imagen ? equipo.imagen + '?t=' + Date.now() : '/logo.webp'}
            alt="Imagen impresora"
            class="rounded img-fluid shadow-sm"
            style="max-height: 300px; max-width: 300px; object-fit: cover; border-radius: 15px; cursor: zoom-in;"
          />
          
        </div>

        <!-- Cliente y modelo y detalles centrados -->
        <div class="text-center mb-4">
          <h4 class="fw-bold text-dark mb-1">{equipo.cliente?.cliente ?? '—'}</h4>
          <div class="text-muted small">{equipo.maquina_reparada ?? 'Modelo no especificado'}</div>

          <div class="row row-cols-1 row-cols-md-2 g-4 justify-content-center mt-3">
            <div class="col"><strong>Ticket:</strong> {equipo.ticket ?? '—'}</div>
            <div class="col"><strong>Estado:</strong> {equipo.estado ?? '—'}</div>
            <div class="col"><strong>¿Cobrado?:</strong> {booleanATexto(equipo.delivery?.pagado === 'true')}</div>
            <div class="col">
              <strong>Técnico:</strong> 
              {equipo.tecnico ? `${equipo.tecnico.nombre} ${equipo.tecnico.apellido}` : '—'}
            </div>
            <div class="col"><strong>DNI/CUIT:</strong> {equipo.cliente?.dni_cuit ?? '—'}</div>
            <div class="col"><strong>Correo:</strong> {equipo.cliente?.correo_electronico ?? '—'}</div>
            <div class="col"><strong>WhatsApp:</strong> {equipo.cliente?.whatsapp ?? '—'}</div>
            <div class="col"><strong>Fecha formulario:</strong> {equipo.marca_temporal ? formatearFecha(equipo.marca_temporal) : '—'}</div>
            <div class="col"><strong>Fecha listo:</strong> {equipo.fecha_de_reparacion ? formatearFecha(equipo.fecha_de_reparacion) : '—'}</div>
          </div>
        </div>

        <!-- Botones Añadir presupuesto | Añadir delivery -->
        <div class="row mt-4">
          <div class="col-6 d-flex justify-content-start">
            <a href={`/presupuesto/${equipo.id}`} class="btn btn-outline-primary btn-sm w-100">
              <i class="bi bi-receipt"></i> Añadir presupuesto
            </a>
          </div>
          <div class="col-6 d-flex justify-content-end">
            <a href={`/delivery/${equipo.id}`} class="btn btn-outline-success btn-sm w-100">
              <i class="bi bi-truck"></i> Añadir delivery
            </a>
          </div>
        </div>

        {/* Mensaje si no se encontró equipo */}
        {!equipo && (
          <div class="alert alert-danger mt-4">No se encontró el equipo con ID: {id}</div>
        )}
      </div>
    </div>
  </div>

  <!-- Script para eliminar ticket (se mantiene tal cual) -->
  <script>
    declare global {
      interface Window {
        eliminarTicket: (id: string) => void;
      }
    }
    window.eliminarTicket = async function(id: string) {
      if (!confirm("¿Estás seguro de que querés eliminar este ticket? Esta acción no se puede deshacer.")) return;
      const res = await fetch(`/api/eliminarTicket?id=${id}`, { method: 'POST' });
      const data = await res.json();
      if (res.ok) {
        alert("Ticket eliminado correctamente.");
        window.location.href = '/dashboard';
      } else {
        alert("Error al eliminar: " + data.error);
      }
    }
  </script>

  <!-- Script para ampliar la imagen (overlay + zoom) -->
  <script src="/scripts/ampliar-imagen.js" defer></script>
</BasePrivateLayout>
