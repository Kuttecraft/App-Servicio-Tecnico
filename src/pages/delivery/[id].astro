---
import BasePrivateLayout from '../../layouts/BasePrivateLayout.astro';
import DeliveryForm from '../../components/DeliveryForm.astro';
import { supabase } from '../../lib/supabase';

const url = new URL(Astro.request.url);

// ⚡️ Precarga por URL:
const precarga = {
  cotizar_delivery: url.searchParams.get('cotizar_delivery') ?? undefined,
  informacion_adicional_delivery: url.searchParams.get('informacion_adicional_delivery') ?? undefined,
  medio_de_entrega: url.searchParams.get('medio_de_entrega') ?? undefined,
  fecha_de_entrega: url.searchParams.get('fecha_de_entrega') ?? undefined,
  forma_de_pago: url.searchParams.get('forma_de_pago') ?? undefined,
  pagado: url.searchParams.get('pagado') ?? undefined,
};

const { id } = Astro.params;

// Traer ticket
const { data: ticket } = await supabase
  .from('tickets_mian')
  .select('id, ticket')
  .eq('id', id)
  .single();

// Traer delivery si existe
const { data: delivery } = await supabase
  .from('delivery')
  .select('*')
  .eq('ticket_id', id)
  .maybeSingle();

// Combinar ticket + delivery + precarga
const equipo = {
  ticketId: ticket?.id,
  ticketNumero: ticket?.ticket,
  ...delivery,
  ...Object.fromEntries(
    Object.entries(precarga).filter(([_, value]) => value !== undefined)
  )
};
---

<BasePrivateLayout>
  <div class="container mt-5">
    <h2 class="mb-4"><i class="bi bi-truck me-2"></i> Añadir delivery</h2>

    {equipo?.ticketId
      ? <DeliveryForm equipo={equipo} />
      : <div class="alert alert-danger">No se encontró el ticket con ID: {id}</div>
    }
  </div>
</BasePrivateLayout>