---
/**
 * Página de Presupuesto de un ticket.
 * - Carga el ticket (para conocer `solicitar_presupuesto`) y el ÚLTIMO presupuesto.
 * - Mezcla datos para pasarle a <PresupuestoForm /> cuando el usuario es admin.
 * - Si es técnico: muestra vista de SOLO LECTURA.
 * - Muestra fecha de presupuesto: la guardada o, si no hay, la fecha actual formateada.
 */
import BasePrivateLayout from '../../layouts/BasePrivateLayout.astro';
import PresupuestoForm from '../../components/PresupuestoForm.astro';
import { supabase } from '../../lib/supabase';
import { formatearFecha } from '../../lib/utils';

// Roles del usuario autenticado
type Perfil = { rol?: string; admin?: boolean; activo?: boolean };
const perfil = (Astro.locals as any).perfil as Perfil | undefined;
const isAdmin = (perfil?.rol === 'admin') || (perfil?.admin === true);
const isTecnico = perfil?.rol === 'tecnico';

// ID del ticket desde la ruta dinámica (/presupuesto/:id)
const { id } = Astro.params as { id: string };

// ===== 1) Ticket (traemos solicitar_presupuesto) =====
const { data: ticket } = await supabase
  .from('tickets_mian')
  .select('id, ticket, solicitar_presupuesto')
  .eq('id', id)
  .single();

// ===== 2) Presupuesto: traer SIEMPRE la última fila (id DESC, limit 1) =====
const { data: presuRows } = await supabase
  .from('presupuestos')
  .select('*')
  .eq('ticket_id', id)
  .order('id', { ascending: false })
  .limit(1);

const presupuesto = Array.isArray(presuRows) ? (presuRows[0] ?? null) : null;
const isVerificar = Boolean(presupuesto?.id); // true si existe presupuesto para “verificar”

// ===== 3) Mezcla datos (ticket + presupuesto) para el formulario o vista =====
const equipo = {
  ticketId: ticket?.id,
  ticketNumero: ticket?.ticket,
  solicitar_presupuesto: ticket?.solicitar_presupuesto ?? null,
  ...presupuesto
};

// ===== 4) Fecha visible: usa la del presupuesto o la fecha/hora actual =====
const fechaPresupuesto = presupuesto?.fecha_presupuesto || null;
const fechaPresupuestoVista = fechaPresupuesto
  ? formatearFecha(fechaPresupuesto)
  : formatearFecha(new Date().toISOString());

// ===== 5) Helpers de UI =====
const v = (x: any) => (x ?? '') || '—';

// (Se incluyen helpers de formato monetario por si el componente de solo lectura los requiere)
function parseToNumberLike(s?: string | null): string {
  if (!s) return '';
  let t = String(s).trim().replace(/[^\d.,-]/g,'');
  const lastDot=t.lastIndexOf('.'), lastCom=t.lastIndexOf(',');
  if(lastDot!==-1 && lastCom!==-1){
    const dec = lastDot>lastCom?'.':','; const mil = dec==='.'?',':'.';
    t = t.split(mil).join('');
    if(dec===',') t = t.replace(',', '.');
  } else if(lastCom!==-1 && lastDot===-1){
    t = t.replace(',', '.');
  }
  return t;
}
function formatARS(v?: string | number | null): string {
  if (v == null || v === '') return '';
  const asStr = typeof v === 'number' ? String(v) : String(v);
  const norm = parseToNumberLike(asStr);
  const n = Number(norm);
  if (!isFinite(n)) return String(v);
  const parts = norm.split('.');
  const decimals = parts[1]?.length ? Math.min(2, parts[1].length) : 0;
  return '$' + n.toLocaleString('es-AR', { minimumFractionDigits: decimals, maximumFractionDigits: decimals });
}
---

<BasePrivateLayout>
  <div class="container mt-5">
    <!-- Encabezado: título dinámico + volver -->
    <div class="d-flex align-items-center justify-content-between mb-3">
      <h2 class="mb-0">
        <i class="bi bi-receipt me-2"></i>
        {isVerificar ? 'Verificar presupuesto' : 'Añadir presupuesto'} del ticket #{equipo.ticketNumero ?? id}
      </h2>
      <a class="btn btn-light btn-sm" href={`/detalle/${id}`}><i class="bi bi-arrow-left"></i> Volver</a>
    </div>

    {equipo?.ticketId ? (
      <>
        <!-- Fecha de presupuesto mostrada en modo lectura (decisión de diseño):
             - El backend (`actualizarTicket.ts`) administra persistencia y reglas -->
        <div class="row g-3 mb-3">
          <div class="col-md-6">
            <label class="form-label">Fecha presupuesto</label>
            <input type="text" class="form-control" value={fechaPresupuestoVista} readonly />
          </div>
        </div>

        {isAdmin ? (
          // Admin: puede crear/editar presupuesto (componente con formulario completo)
          <PresupuestoForm equipo={equipo} />
        ) : isTecnico ? (
          // Técnico: vista de SOLO LECTURA
          <>
            <div class="alert alert-info d-flex align-items-center" role="alert">
              <i class="bi bi-info-circle me-2"></i>
              Vista de solo lectura. Si necesitás cambios, contactá a un administrador.
            </div>

            <div class="card shadow-sm">
              <div class="card-body">
                <div class="row g-3">
                  <div class="col-md-6">
                    <label class="form-label fw-semibold">Monto</label>
                    <input type="text" class="form-control" value={formatARS(equipo.monto)} readonly />
                  </div>
                  <div class="col-md-6">
                    <label class="form-label fw-semibold">¿Garantía activa?</label>
                    <input type="text" class="form-control" value={v(equipo.garantia_activa)} readonly />
                  </div>
                  <div class="col-md-6">
                    <label class="form-label fw-semibold">Link presupuesto</label>
                    <input type="text" class="form-control" value={v(equipo.link_presupuesto)} readonly />
                  </div>
                  {isVerificar && (
                    <div class="col-md-6">
                      <label class="form-label fw-semibold">Aprobación del presupuesto</label>
                      <input type="text" class="form-control" value={v(equipo.presupuesto_aprobado)} readonly />
                    </div>
                  )}
                  <div class="col-md-6">
                    <label class="form-label fw-semibold">¿Quiere saber presupuesto?</label>
                    <input
                      type="text"
                      class="form-control"
                      value={
                        equipo?.solicitar_presupuesto === 'Si' ? 'Sí' :
                        equipo?.solicitar_presupuesto === 'No' ? 'No' :
                        'Sin seleccionar'
                      }
                      readonly
                    />
                  </div>

                  <div class="col-12">
                    <label class="form-label fw-semibold">Notas de administración</label>
                    <textarea class="form-control" rows={4} readonly>{v(equipo.notas_administracion)}</textarea>
                  </div>
                </div>
              </div>
            </div>
          </>
        ) : (
          // Usuario sin rol válido
          <div class="alert alert-warning">No tenés permisos para ver esta sección.</div>
        )}
      </>
    ) : (
      // Ticket inexistente
      <div class="alert alert-danger">No se encontró el ticket con ID: {id}</div>
    )}
  </div>
</BasePrivateLayout>
