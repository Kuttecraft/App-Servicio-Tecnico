---
import { supabase } from '../lib/supabase';
import BasePrivateLayout from '../layouts/BasePrivateLayout.astro';

// 1) Traer usuarios
const { data: usuarios, error } = await supabase
  .from('usuarios_perfil')
  .select('*')
  .order('email', { ascending: true });

// 2) Definición de columnas de permisos
const PERMISOS = [
  { nombre: 'dashboard', label: 'Inicio' },
  { nombre: 'tickets', label: 'Tickets' },
  { nombre: 'usuarios', label: 'Usuarios' },
  { nombre: 'estadisticas', label: 'Estadísticas' },
];
---

<BasePrivateLayout>
  <div class="container mt-5">
    <h2>Gestión de permisos de usuarios</h2>

    {error && (
      <div class="alert alert-danger mt-3">
        Error al cargar usuarios: {error.message}
      </div>
    )}

    <form id="form-permisos" method="post" action="/api/actualizarPermisosUsuarios">
      <div class="table-responsive">
        <table class="table table-bordered mt-4 align-middle">
          <thead>
            <tr>
              <th>Email</th>
              {PERMISOS.map((p) => <th>{p.label}</th>)}
              <th>Admin</th>
              <th>Eliminar</th>
            </tr>
          </thead>

          <tbody>
            {usuarios?.map((usuario, idx) => (
              <tr>
                {/* email */}
                <td style="min-width:280px">
                  <input
                    type="email"
                    name={`usuarios[${idx}][email]`}
                    value={usuario.email}
                    class="form-control"
                    readonly
                  />
                </td>

                {/* checks de permisos */}
                {PERMISOS.map((p) => (
                  <td class="text-center">
                    <input
                      type="checkbox"
                      class="form-check-input"
                      name={`usuarios[${idx}][${p.nombre}]`}
                      checked={Boolean(usuario[p.nombre])}
                    />
                  </td>
                ))}

                {/* admin = rol === 'admin' */}
                <td class="text-center">
                  <input
                    type="checkbox"
                    class="form-check-input"
                    name={`usuarios[${idx}][admin]`}
                    checked={usuario.rol === 'admin'}
                  />
                </td>

                {/* marcar para eliminar (en el submit) */}
                <td class="text-center">
                  <input
                    type="checkbox"
                    class="form-check-input eliminar-checkbox"
                    name={`usuarios[${idx}][eliminar]`}
                    id={`eliminar-${idx}`}
                  />
                </td>
              </tr>
            ))}

            {/* fila para agregar un nuevo usuario */}
            <tr>
              <td>
                <input
                  type="email"
                  name="nuevo[email]"
                  placeholder="nuevo@gmail.com"
                  class="form-control"
                />
              </td>

              {PERMISOS.map((p) => (
                <td class="text-center">
                  <input
                    type="checkbox"
                    class="form-check-input"
                    name={`nuevo[${p.nombre}]`}
                  />
                </td>
              ))}

              <td class="text-center">
                <input type="checkbox" class="form-check-input" name="nuevo[admin]" />
              </td>
              <td></td>
            </tr>
          </tbody>
        </table>
      </div>

      <div class="mt-3 d-flex flex-wrap gap-2">
        <button type="submit" class="btn btn-primary">Guardar cambios</button>
        <button type="button" class="btn btn-danger" id="btn-eliminar">Eliminar seleccionados</button>
      </div>
    </form>

    {/* tu script de borrado masivo (si lo usas) */}
    <script src="/scripts/formUser-eliminar-user.js" is:inline></script>
  </div>
</BasePrivateLayout>
