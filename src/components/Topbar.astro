---
import { UserButton } from '@clerk/astro/components';

// Prop para decidir si mostramos los filtros
const { showFilters = false } = Astro.props;

// Lista fija de estados (solo se usa si showFilters = true)
const ESTADOS = [
  "Retirar",
  "Presupuestar",
  "P. Enviado",
  "Reparación",
  "Prueba",
  "Lista",
  "Entregada",
  "Feedback Enviado",
  "Archivada",
  "No realizada"
];

// Leemos los parámetros actuales para hidratar el formulario
const by = Astro.url.searchParams.get('by') || 'id';
const rawQ = Astro.url.searchParams.get('q') || '';
const q = rawQ.trim();
---

<nav class="navbar bg-white border-bottom px-3 py-2 shadow-sm sticky-top">
  <div class="d-flex w-100 align-items-center justify-content-between">
    <!-- Botón hamburguesa (móvil) -->
    <button
      class="btn d-md-none me-2"
      type="button"
      data-bs-toggle="offcanvas"
      data-bs-target="#mobileSidebar"
      aria-controls="mobileSidebar"
      aria-label="Abrir menú"
    >
      ☰
    </button>

    {showFilters ? (
      /* ===== Topbar CON filtros (solo en Dashboard) ===== */
      <form
        id="filterForm"
        class="row g-2 justify-content-center w-100 mx-2"
        method="get"
        action="/dashboard"
      >
        <!-- Campo dinámico (input o select de estado) -->
        <div
          id="q-container"
          class="col-12 col-md-6"
          data-estados={encodeURIComponent(JSON.stringify(ESTADOS))}
        >
          {by === 'estado' ? (
            <select name="q" class="form-select w-100">
              <option value="">Seleccioná estado…</option>
              {ESTADOS.map((e) => (
                <option value={e} selected={q === e}>{e}</option>
              ))}
            </select>
          ) : (
            <input
              type="text"
              name="q"
              value={q}
              placeholder="Buscar…"
              class="form-control w-100"
            />
          )}
        </div>

        <!-- Selector de columna -->
        <div class="col-12 col-md-3">
          <select name="by" class="form-select w-100" id="by-select">
            <option value="id" selected={by === 'id'}>ID</option>
            <option value="ticket" selected={by === 'ticket'}>Ticket</option>
            <option value="cliente" selected={by === 'cliente'}>Cliente</option>
            <option value="estado" selected={by === 'estado'}>Estado</option>
            <option value="maquina" selected={by === 'maquina'}>Modelo</option>
          </select>
        </div>

        <!-- Botones siempre juntos en una fila; en desktop más chicos -->
        <div class="col-12">
          <div class="row g-2 justify-content-center">
            <div class="col-6 col-md-3">
              <button class="btn btn-primary w-100" type="submit">Filtrar</button>
            </div>
            <div class="col-6 col-md-3">
              <a href="/dashboard" class="btn btn-outline-secondary w-100">Limpiar</a>
            </div>
          </div>
        </div>

        <!-- Paginación: al filtrar, siempre arrancamos en 1 -->
        <input type="hidden" name="page" value="1" />
      </form>
    ) : (
      /* ===== Topbar SIMPLE (todas las otras páginas, ej. Crear Ticket) ===== */
      <div class="flex-grow-1"></div>
    )}

    <!-- User (Clerk) -->
    <div class="ms-auto">
      <UserButton />
    </div>
  </div>

  {showFilters && (
    <>
      <!-- Pasamos ESTADOS del servidor al cliente como JSON seguro (para el JS) -->
      <script type="application/json" id="estados-data">{JSON.stringify(ESTADOS)}</script>
      <!-- Cargamos JS externo SOLO cuando hay filtros -->
      <script defer src="/scripts/form-actualizar-filtro.js"></script>
    </>
  )}
</nav>
